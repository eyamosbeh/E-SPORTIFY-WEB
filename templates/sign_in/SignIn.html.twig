<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- Remixicons pour la navbar -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.5.0/remixicon.css">
    <!-- CSS de la navbar -->
    <link rel="stylesheet" href="{{ asset('navbar/css/styles.css') }}">
    <link rel="stylesheet" href="{{ asset('navbar/scss/main.scss') }}">
    <!-- Font Awesome pour le formulaire de connexion -->
    <script
      src="https://kit.fontawesome.com/64d58efce2.js"
      crossorigin="anonymous"
    ></script>
    <!-- CSS du formulaire de connexion -->
    <link rel="stylesheet" href="{{ asset('sign_in/style.css') }}" />
    <style>
      .image {
        width: 80%;
        height: auto;
        transition: transform 1.1s ease-in-out;
      }
      
      .name-container {
        display: flex;
        gap: 10px;
        width: 380px;
        margin: 0 auto;
        margin-bottom: 10px;
      }
      
      .name-container .input-field {
        width: 50%;
        margin: 0;
      }

      .input-field select {
        background: none;
        outline: none;
        border: none;
        line-height: 1;
        font-weight: 600;
        font-size: 1.1rem;
        color: #333;
        width: 100%;
        padding-left: 10px;
      }

      .input-field select option {
        color: #333;
        background-color: #fff;
      }

      .flash-messages {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
      }

      .flash-message {
        padding: 15px;
        margin-bottom: 10px;
        border-radius: 5px;
        color: white;
        font-weight: bold;
      }

      .flash-success {
        background-color: #4CAF50;
      }

      .flash-error {
        background-color: #f44336;
      }

      .flash-info {
        background-color: #2196F3;
      }

      .error-message {
        color: #f44336;
        font-size: 0.8rem;
        margin-top: 5px;
        margin-bottom: 5px;
        padding-left: 10px;
        display: none;
        text-align: left;
        width: 100%;
        line-height: 1.2;
        position: absolute;
        bottom: -20px;
        left: 0;
      }

      .error-message.show {
        display: block;
      }

      .input-field {
        position: relative;
        margin-bottom: 30px;
      }
    </style>
    <title>Sign in & Sign up Form</title>
  </head>
  <body>
    {{ include('Navbar/navbar_no_login.html.twig') }}

    <!-- Flash Messages -->
    <div class="flash-messages">
      {% for label, messages in app.flashes %}
          {% for message in messages %}
              <div class="flash-message flash-{{ label }}">
                  {{ message }}
              </div>
          {% endfor %}
      {% endfor %}
    </div>

    <div class="container">
      <div class="forms-container">
        <div class="signin-signup">
          <form action="{{ path('app_login') }}" method="POST" class="sign-in-form" id="loginForm">
            <h2 class="title">Sign in</h2>
            <div class="input-field">
              <i class="fas fa-user"></i>
              <input type="text" name="email" placeholder="Email" />
              <div class="error-message" data-error="email"></div>
            </div>
            <div class="input-field">
              <i class="fas fa-lock"></i>
              <input type="password" name="password" placeholder="Password" />
              <div class="error-message" data-error="password"></div>
            </div>
            <div class="error-message" data-error="general"></div>
            <input type="submit" value="Login" class="btn solid" />
            <p class="social-text">Or Sign in with social platforms</p>
            <div class="social-media">
              <a href="#" class="social-icon">
                <i class="fab fa-facebook-f"></i>
              </a>
              <a href="#" class="social-icon">
                <i class="fab fa-twitter"></i>
              </a>
              <a href="#" class="social-icon">
                <i class="fab fa-google"></i>
              </a>
              <a href="#" class="social-icon">
                <i class="fab fa-linkedin-in"></i>
              </a>
            </div>
          </form>
          <form action="{{ path('app_register') }}" method="POST" class="sign-up-form" id="registerForm">
            <h2 class="title">Sign up</h2>
            <div class="name-container">
              <div class="input-field">
                <i class="fas fa-user"></i>
                <input type="text" name="nom" placeholder="nom" />
                <div class="error-message" data-error="nom"></div>
              </div>
              <div class="input-field">
                <i class="fas fa-user"></i>
                <input type="text" name="prenom" placeholder="prenom" />
                <div class="error-message" data-error="prenom"></div>
              </div>
            </div>
            <div class="input-field">
              <i class="fas fa-envelope"></i>
              <input type="text" name="email" placeholder="Email" />
              <div class="error-message" data-error="email"></div>
            </div>
            <div class="input-field">
              <i class="fas fa-lock"></i>
              <input type="password" name="password" placeholder="Password" />
              <div class="error-message" data-error="password"></div>
            </div>
            <div class="input-field">
              <i class="fas fa-lock"></i>
              <input type="password" name="confirm_password" placeholder="Confirm Password" />
              <div class="error-message" data-error="confirmPassword"></div>
            </div>
            <div class="input-field">
              <i class="fas fa-user-tag"></i>
              <select name="role">
                <option value="">Sélectionnez votre rôle</option>
                <option value="joueur">Joueur</option>
                <option value="organisateur">Organisateur</option>
                <option value="vendeur">Vendeur</option>
                
              </select>
              <div class="error-message" data-error="role"></div>
            </div>
            <div class="error-message" data-error="general"></div>
            <input type="submit" class="btn" value="Sign up" />
          </form>
        </div>
      </div>

      <div class="panels-container">
        <div class="panel left-panel">
          <div class="content">
            <h3>New here ?</h3>
            <p>
              Rejoignez notre communauté E-sportive et commencez votre aventure dès maintenant !
            </p>
            <button class="btn transparent" id="sign-up-btn">
              Sign up
            </button>
          </div>
          <img src="{{ asset('Sign_in/img/signin.png') }}" class="image" alt="" />
        </div>
        <div class="panel right-panel">
          <div class="content">
            <h3>One of us ?</h3>
            <p>
              Connectez-vous pour accéder à votre compte et profiter de toutes nos fonctionnalités !
            </p>
            <button class="btn transparent" id="sign-in-btn">
              Sign in
            </button>
          </div>
          <img src="{{ asset('Sign_in/img/signup.png') }}" class="image" alt="" />
        </div>
      </div>
    </div>

    <script src="{{ asset('sign_in/app.js') }}"></script>
    <script src="{{ asset('navbar/js/main.js') }}" defer></script>
    <script>
      // Auto-hide flash messages after 5 seconds
      document.addEventListener('DOMContentLoaded', function() {
        setTimeout(function() {
          const flashMessages = document.querySelectorAll('.flash-message');
          flashMessages.forEach(function(message) {
            message.style.opacity = '0';
            setTimeout(function() {
              message.remove();
            }, 500);
          });
        }, 5000);
      });

      document.addEventListener('DOMContentLoaded', function() {
        const registerForm = document.getElementById('registerForm');
        const loginForm = document.getElementById('loginForm');

        // Fonction pour réinitialiser les messages d'erreur
        function resetErrors(form) {
          form.querySelectorAll('.error-message').forEach(error => {
            error.textContent = '';
            error.classList.remove('show');
          });
        }

        // Fonction pour afficher les erreurs
        function showErrors(form, errors) {
          Object.keys(errors).forEach(field => {
            const errorElement = form.querySelector(`[data-error="${field}"]`);
            if (errorElement) {
              errorElement.textContent = errors[field];
              errorElement.classList.add('show');
            }
          });
        }

        // Gestion du formulaire d'inscription
        registerForm.addEventListener('submit', function(e) {
          e.preventDefault();
          resetErrors(this);

          fetch(this.action, {
            method: 'POST',
            body: new FormData(this)
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              // Afficher un message de succès
              const flashMessage = document.createElement('div');
              flashMessage.className = 'flash-message flash-success';
              flashMessage.textContent = data.message;
              document.querySelector('.flash-messages').appendChild(flashMessage);

              // Réinitialiser le formulaire
              this.reset();

              // Basculer vers le formulaire de connexion
              document.getElementById('sign-in-btn').click();

              // Auto-masquer le message après 5 secondes
              setTimeout(() => flashMessage.remove(), 5000);
            } else {
              showErrors(this, data.errors);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            showErrors(this, {'general': 'Une erreur est survenue'});
          });
        });

        // Gestion du formulaire de connexion
        loginForm.addEventListener('submit', function(e) {
          e.preventDefault();
          resetErrors(this);

          fetch(this.action, {
            method: 'POST',
            body: new FormData(this)
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              window.location.href = data.redirect;
            } else {
              showErrors(this, data.errors);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            showErrors(this, {'general': 'Une erreur est survenue'});
          });
        });
      });
    </script>
  </body>
</html>
